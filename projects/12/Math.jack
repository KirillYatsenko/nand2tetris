// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {

    field Array shift;


    /** Initializes the library. */
    function void init() {
	let shift = Array.new(16);

	let shift[0] = 1;
	let shift[1] = 2;
	let shift[2] = 4;
	let shift[3] = 8;
	let shift[4] = 16;
	let shift[5] = 32;
	let shift[6] = 64;
	let shift[7] = 128;
	let shift[8] = 256;
	let shift[9] = 512;
	let shift[10] = 1024;
	let shift[11] = 2048;
	let shift[12] = 4096;
	let shift[13] = 8192;
	let shift[14] = 16384;
	let shift[15] = 32768;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
    }

    function bit(int x, int i) {
	return shift[i] & x;
    }

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
    	var int sum = 0, i = 0, shiftedx = 0;

	while (i != 15) {
		if (bit(y, i) == 1) {
			let sum = sum + shiftedx;
		}

		shiftedx = 2 * shiftedx;
		i = i + 1;
	}

	return sum;
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
    }
}
